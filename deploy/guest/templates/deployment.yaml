kind: Deployment
apiVersion: apps/v1
metadata:
  name: virtualization-csi-driver
  namespace: {{ .Values.guest.csiDriverNamespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtualization-csi-driver
  template:
    metadata:
      labels:
        app: virtualization-csi-driver
    spec:
      serviceAccount: virtualization-csi-driver
      containers:
        - name: virtualization-csi-driver
          image: dev-registry.deckhouse.io/virt/dev/virtualization-csi-driver:latest
          imagePullPolicy: Always
          args:
            - "--debug"
            - "--csi-endpoint=unix:///csi/csi.sock"
            - "--liveness-endpoint=:9807"
          env:
            - name: HOST_NAMESPACE
              value: {{ .Values.host.virtualMachineNamespace }}
            - name: HOST_KUBECONFIG
              value: {{ .Values.host.kubeconfig }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9808
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-provisioner
          image: gcr.io/k8s-staging-sig-storage/csi-provisioner:canary
          imagePullPolicy: "IfNotPresent"
          args:
            - "--timeout=600s"
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=false"
            - "--default-fstype=ext4"
            - "--leader-election=true"
            - "--leader-election-namespace=$(NAMESPACE)"
            - "--enable-capacity"
            - "--capacity-ownerref-level=2"
            - "--worker-threads=10"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-attacher
          image: gcr.io/k8s-staging-sig-storage/csi-attacher:canary
          imagePullPolicy: "IfNotPresent"
          args:
            - "--timeout=600s"
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election=true"
            - "--leader-election-namespace=$(NAMESPACE)"
            - "--worker-threads=10"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: resizer
          image: gcr.io/k8s-staging-sig-storage/csi-resizer:canary
          imagePullPolicy: "IfNotPresent"
          args:
            - "--timeout=600s"
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election=true"
            - "--leader-election-namespace=$(NAMESPACE)"
            - "--workers=10"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: liveness-probe
          imagePullPolicy: Always
          image: gcr.io/k8s-staging-sig-storage/livenessprobe:canary
          args:
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
      imagePullSecrets:
        - name: dev-registry-secret
      volumes:
        - name: socket-dir
          emptyDir: {}